x-dotnet-env: &dotnet-env
  TZ: Europe/Istanbul
  DOTNET_RUNNING_IN_CONTAINER: true
  DOTNET_VERSION: 9.0.6
  ASPNET_VERSION: 9.0.6
  LogType__RabbitMQ__Status: true
  LogType__File__Status: false
  LogType__File__Path: "/var/log/sp-iot"
  ConnectionStrings__Mysql: SERVER=mysql;DATABASE=smartpower_db;UiD=root;PASSWORD=${MYSQL_ROOT_PASSWORD};PORT=3306;SslMode=none;default command timeout=2000;charset=utf8;AllowPublicKeyRetrieval=True
  RabbitMQ__HostName: rabbitmq
  RabbitMQ__UserName: ${RABBITMQ_DEFAULT_USER}
  RabbitMQ__Password: ${RABBITMQ_DEFAULT_PASS}
services:
  sp-iot:
    image: "docker.io/erte33/sp-iot:latest"
    restart: on-failure
    depends_on:
      - waiter
    volumes:
      - ./entrypoint.sh:/App/entrypoint.sh:ro
    entrypoint: ["bash", "-c", "/App/entrypoint.sh 'IoT Device Manager.dll'"]
    networks:
      - spnet
    ports:
      - "4444:4444/tcp"
      - "4444:4444/udp"
      - "54739:54739/tcp"
      - "54739:54739/udp"
    environment:
      <<: *dotnet-env
  sp-websocket:
    image: "docker.io/erte33/sp-websocket:latest"
    container_name: sp-websocket
    restart: always
    environment:
      <<: *dotnet-env
      ModemLogDatabaseSettings__ConnectionString: mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo:27017
      ServiceLogDatabaseSettings__ConnectionString: mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo:27017
      TsLogDatabaseSettings__ConnectionString: mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo:27017
      ModemLogDatabaseSettings__DatabaseName: "SmartPowerLog"
      ServiceLogDatabaseSettings__DatabaseName: "SmartPowerLog"
      TsLogDatabaseSettings__DatabaseName: "SmartPowerLog"
      ModemLogDatabaseSettings__ModemLogCollectionName: "ModemLog"
      ServiceLogDatabaseSettings__ServiceLogCollectionName: "ServiceLog"
      TsLogDatabaseSettings__TsLogCollectionName: "TsLog"
    volumes:
      - ./entrypoint.sh:/App/entrypoint.sh:ro
    entrypoint: ["bash", "-c", "/App/entrypoint.sh GrupArGe.SmartPower.WebSocket.dll"]
    networks:
      - spnet
    ports:
      - "54738:5057"
  sp-rabbitmqtodb:
    image: "docker.io/erte33/sp-rabbitmqtodb:latest"
    restart: on-failure
    volumes:
      - ./entrypoint.sh:/App/entrypoint.sh:ro
    entrypoint: ["bash", "-c", "/App/entrypoint.sh GrupArGe.RabbitMQToDB.dll"]
    environment:
      <<: *dotnet-env
      ModemLogDatabaseSettings__ConnectionString: mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo:27017
      ServiceLogDatabaseSettings__ConnectionString: mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo:27017
      TsLogDatabaseSettings__ConnectionString: mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo:27017
      RabbitMQ__PreFetchCount__mail: 5
      RabbitMQ__PreFetchCount__modemlog: 5
      RabbitMQ__PreFetchCount__mysqlsingle: 1
      RabbitMQ__PreFetchCount__mysqlbulk: 5
      RabbitMQ__PreFetchCount__mddbulk: 5
      RabbitMQ__PreFetchCount__instantvaluesbulk: 5
      RabbitMQ__PreFetchCount__exportindexbulk: 5
      RabbitMQ__PreFetchCount__gprssignalqualitybulk: 5
      RabbitMQ__PreFetchCount__harmonicsthdbulk: 5
      RabbitMQ__PreFetchCount__harmonicscurrentspectrumbulk: 5
      RabbitMQ__PreFetchCount__harmonicsvoltagespectrumbulk: 5
      RabbitMQ__PreFetchCount__pvabulk: 5
      RabbitMQ__PreFetchCount__pvasingle: 1
      ModemLogDatabaseSettings__DatabaseName: "SmartPowerLog"
      ServiceLogDatabaseSettings__DatabaseName: "SmartPowerLog"
      TsLogDatabaseSettings__DatabaseName: "SmartPowerLog"
      ModemLogDatabaseSettings__ModemLogCollectionName: "ModemLog"
      ServiceLogDatabaseSettings__ServiceLogCollectionName: "ServiceLog"
      TsLogDatabaseSettings__TsLogCollectionName: "TsLog"
    networks:
      - spnet
  sp-taskscheduler:
    image: "docker.io/erte33/sp-taskscheduler:latest"
    restart: on-failure
    volumes:
      - ./entrypoint.sh:/App/entrypoint.sh:ro
    entrypoint: ["bash", "-c", "/App/entrypoint.sh GrupArGe.SmartPower.TaskSchedulerService.dll"]
    networks:
      - spnet
    environment:
      <<: *dotnet-env
      CheckCosa__CosaUrl: "https://kiwi.cosa.com.tr"
      CheckCosa__CosaloginPath: "/api/users/login"
      CheckCosa__CosaEndpointPath: "/api/endpoints/getEndpoints"
      CheckRelayLockStatus__lockedStatusValue: "4"
      CheckRelayLockStatus__deviceSatusParamId: "48"
      CheckRelayLockStatus__relayLockedAlarmId: "21"
      PROXY_SET: "0"
      PROXY_HOST: "192.168.1.1"
      PROXY_PORT: "8080"
      XML_SENT_SERVLET: "http://www.biotekno.biz:8080/SMS-Web/xmlsms"
      XML_REPORT_SERVLET: "http://www.biotekno.biz:8080/SMS-Web/xmlreport"
      REPORT_TIME_OUT: "30"
      iot_service_domain: "http://sp-iot:4444"
  mysql:
    image: docker.io/mysql:8.0.33
    networks:
      - spnet
    command:
      - --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
      - --skip-log-bin
    restart: always
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      TZ: Europe/Istanbul
    volumes:
      - sp-mysql8-data:/var/lib/mysql
    cap_add:
      - SYS_NICE # CAP_SYS_NICE

  phpmyadmin:
    image: docker.io/phpmyadmin
    depends_on:
      - mysql
    networks:
      - spnet
    ports:
      - 4446:80
    environment:
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 10M
      PMA_HOST: mysql
  rabbitmq:
    image: "docker.io/rabbitmq:4.1.0-management-alpine"
    restart: always
    networks:
      - spnet
    ports:
      # - "5672:5672" # RabbitMQ port dışarı açmaya gerek yok
      - "${RABBITMQ_UI_PORT}:15672" # RabbitMQ management UI port
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - sp-rabbitmq-data:/var/lib/rabbitmq
  mongo:
    image: docker.io/mongo:4.4.25 #8.0.5-rc2-noble
    restart: always
    ports:
      - "4443:27017"
    networks:
      - spnet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
    volumes:
      - sp-mongo-data:/data/db

  mongo-express:
    image: docker.io/mongo-express:1.0.2-20-alpine3.19
    depends_on:
      - mongo
    container_name: sp-mongo-express
    networks:
      - spnet
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: ${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
  waiter:
    build: ./waiter
    depends_on:
      - mysql
      - mongo
      - rabbitmq
    ports:
      - "8090:8080"
    networks:
      - spnet
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MONGODB_ROOT_USER: ${MONGODB_ROOT_USER}
      MONGODB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
networks:
  spnet:
    name: sp_mysql_cluster
    external: true
volumes:
  sp-mysql8-data: null
  sp-rabbitmq-data: null
  sp-mongo-data: null
